A proof-of-concept/experiment re: issue tracking within a git repo.
The goal is to make the simplest possible implementation, and
see what goes wrong, to learn what we need from a better one.
As this is so experimental, it is not suitable for production use.

We currently give things both 'id' in the name and an 'id' field.
they might not need the id field if the id is in the name. it's probably
better to have it in the name to avoid merge conflicts.

Similarly, we determine what type of thing a thing is by putting it in
a directory for that thing, but we also include that in the filename.
maybe we don't need both.

We use the following naming:

INTENTS are detailed through REQUIREMENTS are met by TASKS

There can be a many-to-many mapping between INTENTS and REQUIREMENTS.
There can also be a many-to-many mapping between REQUIREMENTS and TASKS

Because of this, and because our fields are fluid for now and might change,
we use the thing in the middle, REQUIREMENTS as the
point of entry to our mapping.

REQUIREMENT_01:
  intents: intent_01, intent_02
  tasks: task_01, task_02, task_03


if we did it in a different order, the nesting would make things harder
to parse. For example:

INTENT_01:
  requirements: requirement_01:
    tasks: task_01, task_02, task_03

INTENT_02:
  requirements: requirement_01:
    tasks: task_01, task_02, task_03

would convey the same info, but is more longwinded and less flat.
So while things are fluid, I'm keeping the tool easy to code for.

'But what about the case where some subset of a requirement's tasks
fulfills another intent?',
I hear nobody ask. Well, since you didn't ask, I'm going to tell you.

INTENT_03:
  requirements: requirement_01:
    tasks: task_01

THIS IS WRONG. MAKE A DIFFERENT REQUIREMENT. EITHER A REQUIREMENT IS
FULFILLED BY ITS TASKS OR IT ISN'T.

Intent_03:
  requirements: requirement_02:
    tasks: task_01

is how that'd actually look. So yeah, we group by requirements. so 
the above would be:

REQUIREMENT_01:
  intents: 01, 02
  tasks: 01, 02, 03

REQUIREMENT_02:
  intents: 03
  tasks: 01

I find it kinda weird that we're using task-tracking terms for bugtracking.
I don't know who would use this tool to note a bug.
